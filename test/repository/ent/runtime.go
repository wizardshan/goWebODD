// Code generated by ent, DO NOT EDIT.

package ent

import (
	"goWebODD/repository/ent/post"
	"goWebODD/repository/ent/schema"
	"goWebODD/repository/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescUserID is the schema descriptor for user_id field.
	postDescUserID := postFields[1].Descriptor()
	// post.DefaultUserID holds the default value on creation for the user_id field.
	post.DefaultUserID = postDescUserID.Default.(int64)
	// postDescTitle is the schema descriptor for title field.
	postDescTitle := postFields[2].Descriptor()
	// post.DefaultTitle holds the default value on creation for the title field.
	post.DefaultTitle = postDescTitle.Default.(string)
	// postDescContent is the schema descriptor for content field.
	postDescContent := postFields[3].Descriptor()
	// post.DefaultContent holds the default value on creation for the content field.
	post.DefaultContent = postDescContent.Default.(string)
	// postDescView is the schema descriptor for view field.
	postDescView := postFields[4].Descriptor()
	// post.DefaultView holds the default value on creation for the view field.
	post.DefaultView = postDescView.Default.(int64)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescHashID is the schema descriptor for hash_id field.
	userDescHashID := userFields[1].Descriptor()
	// user.DefaultHashID holds the default value on creation for the hash_id field.
	user.DefaultHashID = userDescHashID.Default.(string)
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[2].Descriptor()
	// user.DefaultMobile holds the default value on creation for the mobile field.
	user.DefaultMobile = userDescMobile.Default.(string)
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[4].Descriptor()
	// user.DefaultAge holds the default value on creation for the age field.
	user.DefaultAge = userDescAge.Default.(int64)
	// userDescLevel is the schema descriptor for level field.
	userDescLevel := userFields[5].Descriptor()
	// user.DefaultLevel holds the default value on creation for the level field.
	user.DefaultLevel = userDescLevel.Default.(int64)
}
